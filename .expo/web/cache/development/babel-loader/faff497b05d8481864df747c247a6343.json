{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jessicsw/Desktop/Projects/Counter/node_modules/react-navigation-fluid-transitions/TransitionRouteView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Screen } from 'react-native-screens';\nvar EPS = 1e-5;\n\nvar TransitionRouteView = function (_React$Component) {\n  _inherits(TransitionRouteView, _React$Component);\n\n  var _super = _createSuper(TransitionRouteView);\n\n  function TransitionRouteView() {\n    _classCallCheck(this, TransitionRouteView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TransitionRouteView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var onSceneReady = this.context.onSceneReady;\n      var sceneKey = this.props.sceneKey;\n      if (!onSceneReady || !sceneKey) return;\n      onSceneReady(sceneKey);\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      var route = this.props.route;\n      return {\n        route: route\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          children = _this$props.children,\n          isActive = _this$props.isActive,\n          position = _this$props.position,\n          index = _this$props.index;\n\n      var numericPosition = position.__getValue();\n\n      var active = isActive || (numericPosition >= index - 1 && numericPosition <= index + 1 ? 1 : 0);\n      return React.createElement(Screen, {\n        style: style,\n        active: active ? 1 : 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n\n  return TransitionRouteView;\n}(React.Component);\n\nTransitionRouteView.childContextTypes = {\n  route: PropTypes.string\n};\nTransitionRouteView.contextTypes = {\n  onSceneReady: PropTypes.func\n};\nexport default TransitionRouteView;","map":{"version":3,"sources":["/Users/jessicsw/Desktop/Projects/Counter/node_modules/react-navigation-fluid-transitions/TransitionRouteView.js"],"names":["React","PropTypes","Screen","EPS","TransitionRouteView","onSceneReady","context","sceneKey","props","route","style","children","isActive","position","index","numericPosition","__getValue","active","Component","childContextTypes","string","contextTypes","func"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AAEA,IAAMC,GAAG,GAAG,IAAZ;;IASMC,mB;;;;;;;;;;;;;wCASgB;AAAA,UACVC,YADU,GACO,KAAKC,OADZ,CACVD,YADU;AAAA,UAEVE,QAFU,GAEG,KAAKC,KAFR,CAEVD,QAFU;AAGlB,UAAI,CAACF,YAAD,IAAiB,CAACE,QAAtB,EAAgC;AAChCF,MAAAA,YAAY,CAACE,QAAD,CAAZ;AACD;;;sCAEiB;AAAA,UACRE,KADQ,GACE,KAAKD,KADP,CACRC,KADQ;AAEhB,aAAO;AACLA,QAAAA,KAAK,EAALA;AADK,OAAP;AAGD;;;6BAEQ;AAAA,wBACgD,KAAKD,KADrD;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,QADlB,eACkBA,QADlB;AAAA,UAC4BC,QAD5B,eAC4BA,QAD5B;AAAA,UACsCC,KADtC,eACsCA,KADtC;;AAEP,UAAMC,eAAe,GAAGF,QAAQ,CAACG,UAAT,EAAxB;;AACA,UAAMC,MAAM,GAAGL,QAAQ,KACjBG,eAAe,IAAID,KAAK,GAAG,CAA3B,IAAgCC,eAAe,IAAID,KAAK,GAAG,CAA3D,GAA+D,CAA/D,GAAmE,CADlD,CAAvB;AAGA,aACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEJ,KADT;AAEE,QAAA,MAAM,EAAEO,MAAM,GAAG,CAAH,GAAO,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGN,QAJH,CADF;AAQD;;;;EArC+BX,KAAK,CAACkB,S;;AAAlCd,mB,CACGe,iB,GAAoB;AACzBV,EAAAA,KAAK,EAAER,SAAS,CAACmB;AADQ,C;AADvBhB,mB,CAKGiB,Y,GAAe;AACpBhB,EAAAA,YAAY,EAAEJ,SAAS,CAACqB;AADJ,C;AAmCxB,eAAelB,mBAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet } from 'react-native';\nimport { Screen } from 'react-native-screens';\n\nconst EPS = 1e-5;\n\ntype TransitionRouteViewProps = {\n  children: React.Node,\n  style: StyleSheet.Styles,\n  route: string,\n  sceneKey: ?string,\n}\n\nclass TransitionRouteView extends React.Component<TransitionRouteViewProps> {\n  static childContextTypes = {\n    route: PropTypes.string,\n  }\n\n  static contextTypes = {\n    onSceneReady: PropTypes.func,\n  }\n\n  componentDidMount() {\n    const { onSceneReady } = this.context;\n    const { sceneKey } = this.props;\n    if (!onSceneReady || !sceneKey) return;\n    onSceneReady(sceneKey);\n  }\n\n  getChildContext() {\n    const { route } = this.props;\n    return {\n      route,\n    };\n  }\n\n  render() {\n    const { style, children, isActive, position, index } = this.props;\n    const numericPosition = position.__getValue();\n    const active = isActive\n      || (numericPosition >= index - 1 && numericPosition <= index + 1 ? 1 : 0);\n\n    return (\n      <Screen\n        style={style}\n        active={active ? 1 : 0}\n      >\n        {children}\n      </Screen>\n    );\n  }\n}\n\nexport default TransitionRouteView;\n"]},"metadata":{},"sourceType":"module"}