{"ast":null,"code":"import { getScaleTransition } from \"./getScaleTransitions\";\nimport { getTopTransition } from \"./getTopTransition\";\nimport { getBottomTransition } from \"./getBottomTransition\";\nimport { getLeftTransition } from \"./getLeftTransition\";\nimport { getRightTransition } from \"./getRightTransition\";\nimport { getHorizontalTransition } from \"./getHorizontalTransition\";\nimport { getVerticalTransition } from \"./getVerticalTransition\";\nimport { getFlipTransition } from \"./getFlipTransition\";\nvar transitionTypes = [];\nexport function initTransitionTypes() {\n  registerTransitionType('scale', getScaleTransition);\n  registerTransitionType('top', getTopTransition);\n  registerTransitionType('bottom', getBottomTransition);\n  registerTransitionType('left', getLeftTransition);\n  registerTransitionType('right', getRightTransition);\n  registerTransitionType('horizontal', getHorizontalTransition);\n  registerTransitionType('vertical', getVerticalTransition);\n  registerTransitionType('flip', getFlipTransition);\n  registerTransitionType('none', function () {\n    return {};\n  });\n}\nexport function registerTransitionType(name, transitionFunction) {\n  transitionTypes.push({\n    name: name,\n    transitionFunction: transitionFunction\n  });\n}\nexport function getTransitionType(name) {\n  var transitionType = transitionTypes.find(function (e) {\n    return e.name === name;\n  });\n  if (transitionType) return transitionType.transitionFunction;\n  return null;\n}","map":{"version":3,"sources":["/Users/jessicsw/Desktop/Projects/Counter/node_modules/react-navigation-fluid-transitions/Transitions/TransitionTypes.js"],"names":["getScaleTransition","getTopTransition","getBottomTransition","getLeftTransition","getRightTransition","getHorizontalTransition","getVerticalTransition","getFlipTransition","transitionTypes","initTransitionTypes","registerTransitionType","name","transitionFunction","push","getTransitionType","transitionType","find","e"],"mappings":"AAAA,SAASA,kBAAT;AACA,SAASC,gBAAT;AACA,SAASC,mBAAT;AACA,SAASC,iBAAT;AACA,SAASC,kBAAT;AACA,SAASC,uBAAT;AACA,SAASC,qBAAT;AACA,SAASC,iBAAT;AAOA,IAAMC,eAAuC,GAAG,EAAhD;AAEA,OAAO,SAASC,mBAAT,GAA+B;AACpCC,EAAAA,sBAAsB,CAAC,OAAD,EAAUV,kBAAV,CAAtB;AACAU,EAAAA,sBAAsB,CAAC,KAAD,EAAQT,gBAAR,CAAtB;AACAS,EAAAA,sBAAsB,CAAC,QAAD,EAAWR,mBAAX,CAAtB;AACAQ,EAAAA,sBAAsB,CAAC,MAAD,EAASP,iBAAT,CAAtB;AACAO,EAAAA,sBAAsB,CAAC,OAAD,EAAUN,kBAAV,CAAtB;AACAM,EAAAA,sBAAsB,CAAC,YAAD,EAAeL,uBAAf,CAAtB;AACAK,EAAAA,sBAAsB,CAAC,UAAD,EAAaJ,qBAAb,CAAtB;AACAI,EAAAA,sBAAsB,CAAC,MAAD,EAASH,iBAAT,CAAtB;AACAG,EAAAA,sBAAsB,CAAC,MAAD,EAAS;AAAA,WAAO,EAAP;AAAA,GAAT,CAAtB;AACD;AAED,OAAO,SAASA,sBAAT,CAAgCC,IAAhC,EACLC,kBADK,EAC0C;AAC/CJ,EAAAA,eAAe,CAACK,IAAhB,CAAqB;AAAEF,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,kBAAkB,EAAlBA;AAAR,GAArB;AACD;AAED,OAAO,SAASE,iBAAT,CAA2BH,IAA3B,EAAmD;AACxD,MAAMI,cAAc,GAAGP,eAAe,CAACQ,IAAhB,CAAqB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACN,IAAF,KAAWA,IAAf;AAAA,GAAtB,CAAvB;AACA,MAAII,cAAJ,EAAoB,OAAOA,cAAc,CAACH,kBAAtB;AACpB,SAAO,IAAP;AACD","sourcesContent":["import { getScaleTransition } from './getScaleTransitions';\nimport { getTopTransition } from './getTopTransition';\nimport { getBottomTransition } from './getBottomTransition';\nimport { getLeftTransition } from './getLeftTransition';\nimport { getRightTransition } from './getRightTransition';\nimport { getHorizontalTransition } from './getHorizontalTransition';\nimport { getVerticalTransition } from './getVerticalTransition';\nimport { getFlipTransition } from './getFlipTransition';\n\ntype TransitionEntry = {\n  name: string,\n  transitionFunction: Function\n}\n\nconst transitionTypes: Array<TransitionEntry> = [];\n\nexport function initTransitionTypes() {\n  registerTransitionType('scale', getScaleTransition);\n  registerTransitionType('top', getTopTransition);\n  registerTransitionType('bottom', getBottomTransition);\n  registerTransitionType('left', getLeftTransition);\n  registerTransitionType('right', getRightTransition);\n  registerTransitionType('horizontal', getHorizontalTransition);\n  registerTransitionType('vertical', getVerticalTransition);\n  registerTransitionType('flip', getFlipTransition);\n  registerTransitionType('none', () => ({}));\n}\n\nexport function registerTransitionType(name: string,\n  transitionFunction: Function): TransitionEntry {\n  transitionTypes.push({ name, transitionFunction });\n}\n\nexport function getTransitionType(name: string): Function {\n  const transitionType = transitionTypes.find(e => e.name === name);\n  if (transitionType) return transitionType.transitionFunction;\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}